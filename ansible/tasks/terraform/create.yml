---
- hosts: localhost
  gather_facts: false

  vars_files:
    - "{{ playbook_dir }}/../../vars/main.yml"
    - "{{ playbook_dir }}/../../defaults/template_info.yml"
    - "{{ playbook_dir }}/../../defaults/secrets.yml"

  pre_tasks:
    - name: Ensure needed ssh keys are created.
      community.crypto.openssh_keypair:
        path: "{{ sshkey_folder }}/{{ item }}-{{ project_name }}"
      with_items:
        - "{{ root_username }}"

    - name: "Ensure {{ sshkey_folder }}/known_hosts exists"
      ansible.builtin.copy:
        content: ""
        dest: "{{ sshkey_folder }}/known_hosts"
        force: false
        mode: 0664

    - name: "Ensure 'terraform.tfvars' template is deployed"
      ansible.builtin.template:
        src: "{{ playbook_dir }}/../../templates/{{ _cloud_provider }}_terraform.tfvars.j2"
        dest: "{{ playbook_dir }}/../../../terraform/{{ _cloud_provider }}/vm/terraform.tfvars"

  tasks:
    - name: Ensure host is deployed with terraform on {{ _cloud_provider }}.
      community.general.terraform:
        project_path: "{{ playbook_dir }}/../../../terraform/{{ _cloud_provider }}/vm"
        variables_files: "{{ playbook_dir }}/../../../terraform/{{ _cloud_provider }}/vm/terraform.tfvars"
        force_init: true
      register: terraform_infra

    - name: Add deployed host to ansible inventory.
      ansible.builtin.add_host:
        hostname: "{{ item.value.ipv4_address }}"
        groups: "{{ item.key }}"
      changed_when: false
      with_dict: "{{ terraform_infra.outputs.vms.value }}"
