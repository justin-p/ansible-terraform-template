---
- hosts: localhost
  gather_facts: false

  vars_files:
    - "{{ playbook_dir }}/../../defaults/template_info.yml"
    - "{{ playbook_dir }}/../../defaults/secrets.yml"

  tasks:
    - name: Gathering facts.
      community.general.terraform:
        project_path: "{{ playbook_dir }}/../../../terraform/digitalocean/single_vm"
        variables:
          root_ssh_key_path: "{{ root_private_key_path }}"
          do_token: "{{ do_token }}"
          name: "{{ vps_name }}"
          do_private_networking: "false"
        force_init: true
      register: terraform_infra

    - name: Scan ~/.ssh/known_host file for a entry of {{ terraform_infra.outputs.vps_ipv4_address.value }}
      ansible.builtin.command: ssh-keygen -H -F {{ terraform_infra.outputs.vps_ipv4_address.value }}
      delegate_to: localhost
      register: keygen_scan
      changed_when: '"found: line" in keygen_scan.stdout'
      failed_when:
        - keygen_scan.rc != 0 and keygen_scan.rc != 1

    - name: Remove {{ terraform_infra.outputs.vps_ipv4_address.value }} from SSH known hosts if it was found
      ansible.builtin.command: ssh-keygen -R {{ terraform_infra.outputs.vps_ipv4_address.value }}
      delegate_to: localhost
      register: keygen_remove
      when: '"found: line" in keygen_scan.stdout'

    - name: Ensure droplet is destroyed with terraform
      community.general.terraform:
        project_path: "{{ playbook_dir }}/../../../terraform/digitalocean/single_vm"
        variables:
          do_token: "{{ do_token }}"
        state: absent

    - name: Ensure local ssh keys are destroyed
      ansible.builtin.file:
        path: "{{ sshkey_folder }}/{{ item }}-{{ vps_name }}"
        state: absent
      with_items:
        - "{{ root_username }}"
